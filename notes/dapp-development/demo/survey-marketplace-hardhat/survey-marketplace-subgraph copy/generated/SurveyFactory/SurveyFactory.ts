// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class SurveyCreated extends ethereum.Event {
  get params(): SurveyCreated__Params {
    return new SurveyCreated__Params(this);
  }
}

export class SurveyCreated__Params {
  _event: SurveyCreated;

  constructor(event: SurveyCreated) {
    this._event = event;
  }

  get owner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get surveyId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get surveyAddress(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class SurveyFactoryInitialized extends ethereum.Event {
  get params(): SurveyFactoryInitialized__Params {
    return new SurveyFactoryInitialized__Params(this);
  }
}

export class SurveyFactoryInitialized__Params {
  _event: SurveyFactoryInitialized;

  constructor(event: SurveyFactoryInitialized) {
    this._event = event;
  }

  get surveyCreationFees(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class SurveyFactory__surveyOwnersResult {
  value0: Address;
  value1: BigInt;

  constructor(value0: Address, value1: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromAddress(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    return map;
  }
}

export class SurveyFactory extends ethereum.SmartContract {
  static bind(address: Address): SurveyFactory {
    return new SurveyFactory("SurveyFactory", address);
  }

  getAllSurveys(): Array<Address> {
    let result = super.call("getAllSurveys", "getAllSurveys():(address[])", []);

    return result[0].toAddressArray();
  }

  try_getAllSurveys(): ethereum.CallResult<Array<Address>> {
    let result = super.tryCall(
      "getAllSurveys",
      "getAllSurveys():(address[])",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddressArray());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  surveyCreationFees(): BigInt {
    let result = super.call(
      "surveyCreationFees",
      "surveyCreationFees():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_surveyCreationFees(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "surveyCreationFees",
      "surveyCreationFees():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  surveyOwners(param0: Address): SurveyFactory__surveyOwnersResult {
    let result = super.call(
      "surveyOwners",
      "surveyOwners(address):(address,uint256)",
      [ethereum.Value.fromAddress(param0)]
    );

    return new SurveyFactory__surveyOwnersResult(
      result[0].toAddress(),
      result[1].toBigInt()
    );
  }

  try_surveyOwners(
    param0: Address
  ): ethereum.CallResult<SurveyFactory__surveyOwnersResult> {
    let result = super.tryCall(
      "surveyOwners",
      "surveyOwners(address):(address,uint256)",
      [ethereum.Value.fromAddress(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new SurveyFactory__surveyOwnersResult(
        value[0].toAddress(),
        value[1].toBigInt()
      )
    );
  }

  surveys(param0: BigInt): Address {
    let result = super.call("surveys", "surveys(uint256):(address)", [
      ethereum.Value.fromUnsignedBigInt(param0)
    ]);

    return result[0].toAddress();
  }

  try_surveys(param0: BigInt): ethereum.CallResult<Address> {
    let result = super.tryCall("surveys", "surveys(uint256):(address)", [
      ethereum.Value.fromUnsignedBigInt(param0)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _surveyCreationFees(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class CreateSurveyCall extends ethereum.Call {
  get inputs(): CreateSurveyCall__Inputs {
    return new CreateSurveyCall__Inputs(this);
  }

  get outputs(): CreateSurveyCall__Outputs {
    return new CreateSurveyCall__Outputs(this);
  }
}

export class CreateSurveyCall__Inputs {
  _call: CreateSurveyCall;

  constructor(call: CreateSurveyCall) {
    this._call = call;
  }
}

export class CreateSurveyCall__Outputs {
  _call: CreateSurveyCall;

  constructor(call: CreateSurveyCall) {
    this._call = call;
  }

  get surveyId(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }

  get newSurveyAddress(): Address {
    return this._call.outputValues[1].value.toAddress();
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}
